import lara.benchmark.PolybenchBenchmarkSet;

/**
 * @test
 */
aspectdef TestPolybench

	var polybenchSet = new PolybenchBenchmarkSet();
	
	polybenchSet.setInputSizes("MINI");

	for(var polybenchBench of polybenchSet) {
		//polybenchBench.getCMaker().setGenerator("MinGW Makefiles");
		//polybenchBench.getCMaker().setMakeCommand("mingw32-make");

		var execResult = polybenchBench.execute();
		
		//println("Result:\n" + execResult.getReturnValue());
		
		//var verificationResult = Strings.extractValue("Verification    =", execResult.getConsoleOutput(), true);
		//println("Ver: " + verificationResult.trim());
		Check.isTrue(execResult.getReturnValue() === 0, "Expected return value to be 0: '" + execResult.getReturnValue() + "'");
	}

end


