import lara.code.Logger;


aspectdef LoggingWithApi

	// Log every time a function is executed with a Logger	
	var logger = new Logger();
		
	select function.body end
	apply
		// Logging with logger:
		logger.text("Entering function " + $function.signature).ln().log($body, true);
	end


	
	// Print the value of built-in floating or unsigned variables
	// in the function 'foo', everytime they are written during execution.
	select function{"foo"}.varref end
	apply
		if($varref.use === "read") {
			continue;
		}

		var $type = $varref.type;

		if(!$type.instanceOf("builtinType")) {
			continue;
		}

		var isFloat = $type.isFloat;
		var isUnsignedInt = $type.isUnsigned;

		if(!isFloat && !isUnsignedInt) {
			continue;
		}

		logger.text("Variable '"+$varref.name+"' written:");
		if(isFloat) {
			logger.double($varref.name);
		}
		if(isUnsignedInt) {
			logger.int($varref.name);
		}

		logger.ln().log($varref);
	end
	
	// Print the modified program code
	select program end
	apply
		println($program.code);
	end
end