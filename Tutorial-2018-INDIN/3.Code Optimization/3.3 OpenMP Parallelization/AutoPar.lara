import LoopTiling;

import clava.autopar.Parallelize;
import clava.Clava;


aspectdef AutoPar
	/*
	var $loopToParallelize = undefined;
	select function{'matrix_mult'}.pragma{"loop1"}.target end
	apply
			$loopToParallelize = $target;
			break;
	end

	Parallelize.forLoops([$loopToParallelize]);
	*/

	tileVars = {'l': 'BS1', 'j': 'BS2'};

	// find the top-level loop
	select function{'matrix_mult'}.pragma{"loop1"}.target end
	apply
		call LoopTiling($target, tileVars);
	end

	// Print modified code
	select program end
	apply
		println($program.code);
	end

    var $loops = [];
    select function{"matrix_mult"}.loop end
	apply
        $loops.push($loop);
	end

    Parallelize.forLoops($loops);


	
	// Print modified code
	select function{'matrix_mult'} end
	apply
		println($function.code);
	end
end