/**
 * Object for building a dynamic call graph.
 */
var DynamicCallGraph = function(name) {
	this.name = name;
	this.laraObj = new LaraObject();
	
};

/**
 * Inserts code for recording a pair function - call to the call graph. The call must be inside a function.
 */
DynamicCallGraph.prototype.add = function($call) {
	throw ("DynamicCallGraph.add: not implemented");
}

/**
 * Inserts the code for printing the dynamic call graph after the given $callSite
 */
DynamicCallGraph.prototype.print = function($callSite) {
	throw ("DynamicCallGraph.print: not implemented");
}


/*** IMPLEMENTED METHODS ***/


DynamicCallGraph.prototype._getId = function(caller, callee) {
	return this.laraObj.getId(caller, callee);
}

DynamicCallGraph.prototype._getTotalPairs = function() {
	return this.laraObj.getTotal();
}

DynamicCallGraph.prototype._getGraphId = function() {
	return "dcg_" + this.name;
}

DynamicCallGraph.prototype._insertionPoint = function($callSite, ancestorName) {

	if($callSite.instanceOf(ancestorName)) {
		return $callSite;
	} 
	
	var $ancestor = $callSite.ancestor(ancestorName);
	
	if(isUndefined($ancestor)) {
		throw "DynamicCallGraphPrint: Could not insert at joinpoint " + $callSite.joinPointType + ", only supports " + ancestorName + " or joinpoints inside " + ancestorName;
	}	

	return $ancestor;
}


