aspectdef LogCallsClavaCpp

	select file end
	apply
		$file.exec addInclude("iostream", true);
		$file.exec addInclude("fstream", true);
	end
	
	var idCounter = 0;
	var filename = "log.txt";
    select file.call end
    apply
        var log_file_name = "log_file_"+(idCounter++);
		
		// Consecutive calls to insertBegin will insert in reversed order (always inserts at the beginning)
		$call.ancestor("function").body.insertBegin(%{[[log_file_name]].open("[[filename]]", std::ios_base::app);}%);
		$call.ancestor("function").body.insertBegin(%{std::ofstream [[log_file_name]];}%);
			
	    $call.insert before %{[[log_file_name]] << "Logging to a file" << "\n";}%;
	    $call.insert before %{std::cout << "Print double " << 2 << " after bar" << "\n";}%;
			
	    $call.insert after %{std::cout << "Print double " << 2 << " after [[$call.name]]" << "\n";}%;
			
	    $call.insert after %{[[log_file_name]] << "Logging again to a file" << "\n";}%;
		
	    $call.insert after %{std::cout << "Printing again";}%;
	    
    end

end