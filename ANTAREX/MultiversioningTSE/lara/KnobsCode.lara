aspectdef AddKnobs

	input
		globalNameThreads,
		globalNameOpt,
		globalNameBind
	end

	println("\t Adding knobs");
	
	var intType = ClavaJoinPoints.builtinType("int");

	// define and declare a global variable to hold the number of OpenMP threads
	select file end
	apply						
		exec addGlobal([[globalNameThreads]], intType, "4");
		exec addGlobal([[globalNameOpt]], intType, "0");
		exec addGlobal([[globalNameBind]], intType, "0");
	end
end

aspectdef AddKnobsCli
	input
		globalNameBind,
		globalNameOpt,
		globalNameThreads
	end

	println("\t Inserting CLI options code");

	select function{'main'}.body end
	apply
		$function.insert before KnobsCliTemplate(globalNameBind, globalNameOpt, globalNameThreads);
		exec insertBefore('set_init_values(argc, argv);');
	end
end

codedef KnobsCliTemplate(globalNameBind, globalNameOpt, globalNameThreads) %{
	#include <stdlib.h>
	#include <errno.h>
	void set_init_values(int argc, char** argv) {
	    
	    const char *errstr;
	    char* end;
	    
	    if(argc == 4) {
	        
	        errno = 0;
	        [[globalNameBind]] = strtol(argv[1], &end, 0);
	        if(errno != 0) {perror("can't parse [[globalNameBind]] value: "); exit(EXIT_FAILURE);}
	        if(*end != '\0') {printf("can't parse [[globalNameBind]] value: %s\n", argv[1]); exit(EXIT_FAILURE);}
	        
	        errno = 0;
	        [[globalNameOpt]] = strtol(argv[2], &end, 0);
	        if(errno != 0) {perror("can't parse [[globalNameOpt]] value: "); exit(EXIT_FAILURE);}
	        if(*end != '\0') {printf("can't parse [[globalNameOpt]] value: %s\n", argv[2]); exit(EXIT_FAILURE);}
	        
	        errno = 0;
	        [[globalNameThreads]] = strtol(argv[3], &end, 0);
	        if(errno != 0) {perror("can't parse [[globalNameThreads]] value: "); exit(EXIT_FAILURE);}
	        if(*end != '\0') {printf("can't parse [[globalNameThreads]] value: %s\n", argv[3]); exit(EXIT_FAILURE);}
	        
	        printf("[[globalNameBind]]: %d\n", [[globalNameBind]]);
	        printf("[[globalNameOpt]]: %d\n", [[globalNameOpt]]);
	        printf("[[globalNameThreads]]: %d\n", [[globalNameThreads]]);
	   }
	}
}%
end