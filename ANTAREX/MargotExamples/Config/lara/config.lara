import antarex.margot.config.MargotConfig;

aspectdef MargotConfigDemo

    // make a config and a new block
    var mc = new MargotConfig();
    var mb1 = mc.newBlock('foo');

	/* metrics */
	mb1.addMetric('exec_time_ms', 'int', true);
    
    // add a goal
	mb1.addMetricGoal('exec_time_lower_bound', MargotCFun.LT, 2, 'exec_time_ms');
    
    // add a software knob
    mb1.addKnob('num_trials', 'trials', 'int');
    
    // make an energy monitor
    var em = mb1.newEnergyMonitor('my_energy_monitor');
    em.expose('avg_energy', MargotExpose.AVERAGE);
    
    // make a time monitor
    var tm = mb1.newTimeMonitor('my_elapsed_time_monitor');
    tm.expose('avg_computation_time', MargotExpose.AVERAGE);
    tm.useMicro();
    
    // make a new state
    var s = mb1.newState('my_optimization');
    s.setStarting();
    s.subjectTo('exec_time_lower_bound', 3, 30);
    s.minimizeMetric('exec_time_ms', 1.0);
    
    // generate the code
    println(mc.build());
end
