import antarex.margot.MargotConfig;

aspectdef XmlConfig

	input
		configPath
	end

	output
		dseInfo,
		codeGenInfo
	end

	var config = new MargotConfig();
	var matmul = config.newBlock('matmul');

	/* monitors */
	var timeMonitor = matmul.newTimeMonitor('timer');
	timeMonitor.useMilli();
	timeMonitor.expose('mean_exec_time', MargotExpose.AVG);

	/* knobs */
	matmul.addKnob('block_size_1', 'BS1', 'int');
	matmul.addKnob('block_size_2', 'BS2', 'int');

	/* metrics */
	matmul.addMetric('exec_time_ms', 'int', MargotDistribution.YES);

	/* data features */
	matmul.addDataFeature('size_n', 'int');
	matmul.addDataFeature('size_m', 'int');
	matmul.addDataFeature('size_k', 'int');

	/* runtime */
	matmul.addRuntimeProvider('exec_time_ms', 'timer', 1);

	/* goals */
	matmul.addMetricGoal('exec_time_lower_bound', MargotCFun.LT, 2, 'exec_time_ms');

	/* states */
	var state = matmul.newState('my_optimization');
	state.setStarting(true);

	state.minimize('exec_time_ms', 1.0);
	
	state.subjectTo('exec_time_lower_bound', 3, 30);

	config.build(configPath);

	/* generate the information needed for DSE */
	dseInfo = config.getDseInfo('matmul');

	/* generate the information needed for the code gen */
	codeGenInfo = config.getCodeGenInfo('matmul');

	println('XmlConfig done');
end