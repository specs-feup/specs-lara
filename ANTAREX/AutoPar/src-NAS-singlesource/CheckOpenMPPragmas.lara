import lara.Io;
import lara.Check;

aspectdef CheckOpenMPPragmas
	input expectedCodeFile end

	
	//var ompPragmas = "";
	select pragma{"omp"}.target end
	apply
		// Comment pragmas that are not in outer loops
		if($target.instanceOf("loop")) {
			if($target.kind === "for" && $target.isOutermost) {
				continue;
			}
		}
		
		$pragma.insert replace "// " + $pragma.code;
		//ompPragmas += $pragma.content;
	end
	
	var currentCode = "<not initialized>";
	select file end
	apply
		currentCode = $file.code;
		break;
	end

	var expectedCode = Io.readFile(expectedCodeFile);
	if(expectedCode === null) {
		expectedCode = "Could not find file '" + expectedCodeFile + "'";
	}
	
	Check.strings(currentCode, expectedCode);
end
