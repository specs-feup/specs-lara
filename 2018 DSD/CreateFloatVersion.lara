import ChangePrecision;
import clava.ClavaJoinPoints;

aspectdef CreateFloatVersion
	input $function, suffix end
	output $clonedFunc end

	$double = ClavaJoinPoints.builtinType('double');
	$float = ClavaJoinPoints.builtinType('float');
	
	/* clone the target functions and the child calls */
	call cloned : CloneFunction($function, suffix);

	/* change the precision of the cloned function */
	call ChangePrecision(cloned.$clonedFunc, $double, $float);
	
	$clonedFunc = cloned.$clonedFunc;
end

aspectdef CloneFunction
	input $func, suffix end
	output $clonedFunc end

	/* clone the target function with a new name*/
	var newName = $func.name + suffix;
	$func.exec $clonedFunc : clone(newName);

	/* recursively, do the same on functions that are
	 * called inside this function ... */
	 
	 /* change function calls to the cloned function */
	 /*
	 select stmt.call end
	 apply
		def name = newName;
	 end
	 condition $func.functionType.equals($call.functionType) end
	 */
end
