aspectdef ChangePrecision

	input $func, $oldType, $newType end
	
	/* change type of variable declarations found
	 *  inside the function and parameters */
	select $func.decl end
	apply
		var changedType = changeType($decl.type, $oldType, $newType);
		def type = changedType;
	end

	/* do the same with the function return type ... */
	if($func.functionType.returnType.equals($oldType))
		$func.functionType.def returnType = $newType;
	
end

function changeType($targetType, $oldType, $newType) {

	/* Replace target type */
	if($targetType.equals($oldType)) {
		return $newType;
	}
	
	/* Get underlying type*/
	var underlyingType = getUnderlyingType($targetType);
	/* If no underlying type, just return type*/
	if(underlyingType === undefined) {
		return $targetType;
	}
	
	/* Apply change to underlying type */
	var changedUnderlying = changeType(underlyingType, $oldType, $newType);
	
	/* Update if there are changes */
	if(!changedUnderlying.equals(underlyingType)) {
		underlyingType.replaceWith(changedUnderlying);
	}
	
	return $targetType;
}


function getUnderlyingType($type) {
	if($type.hasSugar) {
		return $type.desugar;
	}
	
	if($type.isPointer) {
		return $type.pointee;
	}
	
	if($type.isArray) {
		return $type.elementType;
	}

	return undefined;
}
